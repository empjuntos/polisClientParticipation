---
image: docker:latest
services:
- docker:dind
stages:
- build
- deploy

variables:
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME

build to production:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker run -u node --rm --workdir=/app -v $PWD:/app node npm install
    - docker run -u node --rm --workdir=/app -v $PWD:/app node ./node_modules/bower/bin/bower install
    - docker run -u node --rm --workdir=/app -e NODE_ENV=production -v $PWD:/app node ./node_modules/gulp-cli/bin/gulp.js prodBuildNoDeploy
    - docker create --name polisclientparticipation nginx
    - docker cp $PWD/config/nginx.conf polisclientparticipation:/etc/nginx/conf.d/default.conf
    - docker cp $PWD/dist/. polisclientparticipation:/usr/share/nginx/html
    - docker commit polisclientparticipation $RELEASE_IMAGE
    - docker tag $RELEASE_IMAGE "$CI_REGISTRY_IMAGE:latest"
    - docker push $RELEASE_IMAGE
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - /master|develop/
  environment: production
  tags:
    - docker

deploy to production:
  stage: deploy
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment Production --stack polis-prod --service polis-participation --new-image $RELEASE_IMAGE --no-finish-upgrade --debug
  only:
    - /master/
  environment: production
  tags:
    - docker

deploy to development:
  stage: deploy
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment Production --stack polis-dev --service polis-participation --new-image $RELEASE_IMAGE --no-finish-upgrade --debug
  only:
    - /develop/
  environment: development
  tags:
    - docker
